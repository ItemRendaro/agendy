(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{317:function(t,e,a){"use strict";a.r(e);var n=a(14),r=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"カテゴリー一覧を表示するvue-jsアプリの作成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#カテゴリー一覧を表示するvue-jsアプリの作成"}},[t._v("#")]),t._v(" カテゴリー一覧を表示するVue.jsアプリの作成")]),t._v(" "),e("div",{staticStyle:{"text-align":"right"}},[t._v("\n2024-02-11 14:04:00\n")]),t._v(" "),e("p",[t._v("今回は、Vue.jsを使用して、カテゴリーごとに記事一覧を表示するアプリを作成します。具体的には、VuePressを使用してMarkdownファイルからカテゴリーを取得し、カテゴリーごとに記事一覧を表示します。")]),t._v(" "),e("h3",{attrs:{id:"_1-enhanceapp-jsの作成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-enhanceapp-jsの作成"}},[t._v("#")]),t._v(" 1. enhanceApp.jsの作成")]),t._v(" "),e("p",[t._v("まずは、VuePressのenhanceApp.jsを使用して、Markdownファイルからカテゴリーを取得する処理を行います。この処理は、Vueのmix-inを使用して全てのページで共通の処理を行います。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("export default ({ Vue }) => {\n  Vue.mixin({\n    computed: {\n      categories() {\n        const categories = new Set(); \n\n        this.$site.pages.forEach(page => {\n          if (page.frontmatter.category) {\n            categories.add(page.frontmatter.category);\n          }\n        });\n\n        return Array.from(categories);\n      }\n    }\n  });\n};\n")])])]),e("p",[t._v("このコードでは、全てのページのMarkdownファイルからカテゴリーを取得し、重複のない一意のカテゴリー一覧を作成しています。")]),t._v(" "),e("h3",{attrs:{id:"_2-category-vueの作成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-category-vueの作成"}},[t._v("#")]),t._v(" 2. Category.vueの作成")]),t._v(" "),e("p",[t._v("次に、カテゴリーごとに記事一覧を表示するVueコンポーネントを作成します。これには、Category.vueを使用します。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<template>\n  <div>\n    <div v-for="category in categories" :key="category">\n      <h3>{{ category }} の記事一覧</h3>\n      <ul>\n        <li v-for="post in filteredPosts(category)" :key="post.title">\n          \x3c!-- post.title が存在する場合のみ表示 --\x3e\n          <router-link v-if="post.frontmatter.title" :to="post.path">{{ post.frontmatter.title }}</router-link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      categories: [], \n    };\n  },\n  computed: {\n    filteredPosts() {\n      return (category) => {\n        if (!this.$site || !this.$site.pages) {\n          return [];\n        }\n\n        return this.$site.pages\n          .filter(page => page.frontmatter.category === category && page.frontmatter.title)\n          .sort((a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date));\n      };\n    },\n  },\n  created() {\n    this.categories = this.$store.state.categories;\n  }\n};\n<\/script>\n')])])]),e("p",[t._v("このコンポーネントでは、カテゴリーごとにフィルタリングされた記事一覧を表示する処理を行います。createdフック内でVuexストアからカテゴリーを取得しています。")]),t._v(" "),e("h3",{attrs:{id:"_3-category-vue内で直接カテゴリーを定義したい場合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-category-vue内で直接カテゴリーを定義したい場合"}},[t._v("#")]),t._v(" 3. Category.vue内で直接カテゴリーを定義したい場合")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<template>\n  <div>\n    <div v-for="category in categories" :key="category">\n      <h3>{{ category }} の記事一覧</h3>\n      <ul>\n        <li v-for="post in filteredPosts(category)" :key="post.title">\n          \x3c!-- post.title が存在する場合のみ表示 --\x3e\n          <router-link v-if="post.frontmatter.title" :to="post.path">{{ post.frontmatter.title }}</router-link>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      categories: ["Vue.js", "React", "Angular"], // カテゴリーを直接定義\n    };\n  },\n  computed: {\n    filteredPosts() {\n      return (category) => {\n        if (!this.$site || !this.$site.pages) {\n          return [];\n        }\n\n        return this.$site.pages\n          .filter(page => page.frontmatter.category === category && page.frontmatter.title)\n          .sort((a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date));\n      };\n    },\n  },\n};\n<\/script>\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);